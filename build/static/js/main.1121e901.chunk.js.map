{"version":3,"sources":["healthcard.js","App.js","reportWebVitals.js","index.js"],"names":["customTheme","deepmerge","theme","fonts","normal","HealthCard","useState","steps","setSteps","finished","passwordValidation","rePasswordValidation","mobileValidation","mailValidation","component","setComponent","reader","setReader","healthCard","setHealthCard","userName","setUserName","city","setCity","town","setTown","village","setVillage","phone","useRef","mobile","mail","password","repassword","householdNo","neighborhood","recoveryMail","FinishLabel","Label","outline","color","sx","bg","NavLink","step","text","SideNav","Link","href","variant","onClick","Math","max","undefined","selected","Box","CounterLabel","Text","pl","includes","TopHeading","Heading","fontSize","mb","Title","my","Dropdown","items","placeholder","selectedItem","setSelectedItem","DropdownMenu","renderAnchor","children","ariaLabelledBy","anchorProps","DropdownButton","onChange","RequiredField","label","id","value","validation","description","FormGroup","htmlFor","as","ml","TextInput","ref","width","PointerBox","mt","p","borderColor","caret","InputField","HomeButton","Button","NextStep","NextButton","ButtonPrimary","PreviosButton","push","Step1","pt","Step2","OSName","window","navigator","userAgent","indexOf","DetectOS","document","documentMode","Step3","Cities","React","useMemo","Towns","Villages","Step4","Step6","Step7","Flash","textAlign","display","justifyContent","flexWrap","ThemeProvider","BaseStyles","m","borderBottomWidth","borderBottomStyle","pb","gridTemplateColumns","gridGap","bordered","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1121e901.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\nimport {\n  ThemeProvider,\n  theme,\n  BaseStyles,\n  Box,\n  Heading,\n  SideNav,\n  Text,\n  CounterLabel,\n  Label,\n  Link,\n  Button,\n  ButtonPrimary,\n  TextInput,\n  Flash,\n  PointerBox,\n  FormGroup,\n  DropdownMenu,\n  DropdownButton\n} from '@primer/components'\n/* import { CheckIcon } from '@primer/octicons-react' */\nimport deepmerge from 'deepmerge'\nimport './fonts.css'\n\nconst customTheme = deepmerge(theme, {\n  fonts: {\n    normal: 'Roboto, sans-serif, Noto Sans TC'\n  }\n})\n\nfunction HealthCard() {\n  const [steps, setSteps] = useState(1)\n  const [finished, setFinished] = useState([])\n  const [validation, setValidation] = useState('phone')\n  /*   const [idValidation, SetIDValidation] = useState(true)\n  const [phoneValidation, setPhoneValidation] = useState(true)\n  const [pinValidation, setPinValidation] = useState(true)\n  const [accountValidation, setAccountValidation] = useState(true) */\n  const [passwordValidation, setPasswordValidation] = useState(true)\n  const [rePasswordValidation, setRePasswordValidation] = useState(true)\n  const [mobileValidation, setMobileValidation] = useState(true)\n  const [mailValidation, setMailValidation] = useState(true)\n  const [component, setComponent] = useState('未檢測')\n  const [reader, setReader] = useState('未檢測')\n  const [healthCard, setHealthCard] = useState('未檢測')\n  const [userName, setUserName] = useState('未檢測')\n  const [city, setCity] = useState('')\n  const [town, setTown] = useState('')\n  const [village, setVillage] = useState('')\n\n  const phone = useRef('')\n  const mobile = useRef('')\n  const mail = useRef('')\n  const password = useRef('')\n  const repassword = useRef('')\n  const householdNo = useRef('')\n  const neighborhood = useRef('')\n  const recoveryMail = useRef('')\n\n  const FinishLabel = () => {\n    return (\n      <Label outline color='text.inverse' sx={{ bg: 'bg.successInverse' }}>\n        完成\n      </Label>\n    )\n  }\n\n  const NavLink = ({ step, text }) => {\n    return (\n      <SideNav.Link\n        href='#'\n        variant='full'\n        onClick={\n          Math.max(...finished) + 1 >= step ? () => setSteps(step) : undefined\n        }\n        selected={steps === step}\n      >\n        <Box>\n          <CounterLabel>{step}</CounterLabel>\n          <Text pl={2}>{text}</Text>\n        </Box>\n        <Box>{finished.includes(step) ? <FinishLabel /> : null}</Box>\n      </SideNav.Link>\n    )\n  }\n\n  const TopHeading = ({ text }) => {\n    return (\n      <Heading fontSize={4} mb={3}>\n        {text}\n      </Heading>\n    )\n  }\n\n  const Title = ({ text }) => {\n    return (\n      <Heading fontSize={4} my={3}>\n        {text}\n      </Heading>\n    )\n  }\n\n  const Dropdown = ({ items, placeholder, selectedItem, setSelectedItem }) => {\n    return (\n      <DropdownMenu\n        renderAnchor={({\n          children,\n          'aria-labelledby': ariaLabelledBy,\n          ...anchorProps\n        }) => (\n          <DropdownButton\n            aria-labelledby={`favorite-color-label ${ariaLabelledBy}`}\n            {...anchorProps}\n          >\n            {children}\n          </DropdownButton>\n        )}\n        placeholder={placeholder}\n        items={items}\n        selectedItem={selectedItem}\n        onChange={setSelectedItem}\n      />\n    )\n  }\n\n  const RequiredField = ({\n    label,\n    id,\n    value,\n    placeholder,\n    validation,\n    description\n  }) => {\n    return (\n      <FormGroup>\n        <FormGroup.Label htmlFor={id}>\n          {label}\n          <Text as='span' color='text.danger' ml={1}>\n            *\n          </Text>\n        </FormGroup.Label>\n        {description !== '' && <Text as='p'>{description}</Text>}\n        <TextInput\n          ref={value}\n          aria-label={id}\n          id={id}\n          placeholder={placeholder}\n          width={250}\n        />\n        {validation === false ? (\n          <PointerBox\n            mt={2}\n            p={2}\n            bg='bg.danger'\n            borderColor='border.danger'\n            caret='top-left'\n            width={150}\n          >\n            此欄位為必填\n          </PointerBox>\n        ) : null}\n      </FormGroup>\n    )\n  }\n\n  const InputField = ({ label, id, value, placeholder, description }) => {\n    return (\n      <FormGroup>\n        <FormGroup.Label htmlFor={id}>{label}</FormGroup.Label>\n        {description !== '' && <Text as='p'>{description}</Text>}\n        <TextInput\n          ref={value}\n          aria-label={id}\n          id={id}\n          placeholder={placeholder}\n          width={250}\n        />\n      </FormGroup>\n    )\n  }\n\n  const HomeButton = () => {\n    return <Button onClick={() => NextStep(1)}>回首頁</Button>\n  }\n\n  const NextButton = ({ step }) => {\n    return (\n      <ButtonPrimary ml={3} onClick={() => NextStep(step)}>\n        下一步\n      </ButtonPrimary>\n    )\n  }\n\n  const PreviosButton = ({ step }) => {\n    return <Button onClick={() => NextStep(step)}>上一步</Button>\n  }\n\n  const NextStep = (step) => {\n    finished.push(step - 1)\n    setSteps(step)\n  }\n\n  const Info = () => {\n    return (\n      <Box width={650}>\n        <Flash variant='success'>\n          <Heading textAlign='center' fontSize={5} mb={2}>\n            驗證成功\n          </Heading>\n          <Text as='p' textAlign='center'>\n            手機門號身份驗證成功，預設身份驗證碼為您的手機門號前六碼\n          </Text>\n          <Box display='flex' justifyContent='center' flexWrap='nowrap'>\n            <ButtonPrimary mt={3} onClick={() => NextStep(6)}>\n              下一步\n            </ButtonPrimary>\n          </Box>\n          <Box display='flex' justifyContent='center' flexWrap='nowrap'>\n            <Link href='#' mt={3}>\n              傳送驗證成功資訊至信箱\n            </Link>\n          </Box>\n        </Flash>\n      </Box>\n    )\n  }\n\n  const Step1 = () => {\n    return (\n      <Box pt={5}>\n        <TopHeading text='申請資格' />\n        <Text as='p'>\n          本註冊表單僅提供符合下列資格之民眾使用：\n          <br />\n          ．具有中華民國國籍公民\n          <br />\n          ．或近六個月內有定期繳納健康保險者\n        </Text>\n        <Title text='準備資料' />\n        <Text as='p'>\n          本註冊過程包含身份驗證，請先備齊註冊所需設備及文件：\n          <br />\n          ．健保卡\n          <br />\n          ．戶口名薄\n          <br />\n          ．讀卡機\n        </Text>\n        <Title text='其他申辦方式' />\n        <Text as='p'>\n          請攜帶本人健保卡、身分證到健保署各分區業務組及\n          <br />\n          聯絡辦公室即可臨櫃申請註冊，自行下載健康存摺。\n        </Text>\n        <Link href='#'>離我最近的申辦地點查詢</Link>\n        <br />\n        <br />\n        <HomeButton />\n        <NextButton step={2} />\n      </Box>\n    )\n  }\n\n  const Step2 = () => {\n    const DetectOS = () => {\n      var OSName = 'Unknown'\n      if (window.navigator.userAgent.indexOf('Windows NT 10.0') !== -1)\n        OSName = 'Windows 10'\n      if (window.navigator.userAgent.indexOf('Windows NT 6.3') !== -1)\n        OSName = 'Windows 8.1'\n      if (window.navigator.userAgent.indexOf('Windows NT 6.2') !== -1)\n        OSName = 'Windows 8'\n      if (window.navigator.userAgent.indexOf('Windows NT 6.1') !== -1)\n        OSName = 'Windows 7'\n      if (window.navigator.userAgent.indexOf('Windows NT 6.0') !== -1)\n        OSName = 'Windows Vista'\n      if (window.navigator.userAgent.indexOf('Windows NT 5.1') !== -1)\n        OSName = 'Windows XP'\n      if (window.navigator.userAgent.indexOf('Windows NT 5.0') !== -1)\n        OSName = 'Windows 2000'\n      if (window.navigator.userAgent.indexOf('Mac') !== -1) OSName = 'Mac/iOS'\n      if (window.navigator.userAgent.indexOf('X11') !== -1) OSName = 'UNIX'\n      if (window.navigator.userAgent.indexOf('Linux') !== -1) OSName = 'Linux'\n      return OSName\n    }\n\n    const DetectBrowser = () => {\n      if (\n        (navigator.userAgent.indexOf('Opera') ||\n          navigator.userAgent.indexOf('OPR')) !== -1\n      ) {\n        return 'Opera'\n      } else if (navigator.userAgent.indexOf('Chrome') !== -1) {\n        return 'Chrome'\n      } else if (navigator.userAgent.indexOf('Safari') !== -1) {\n        return 'Safari'\n      } else if (navigator.userAgent.indexOf('Firefox') !== -1) {\n        return 'Firefox'\n      } else if (\n        navigator.userAgent.indexOf('MSIE') !== -1 ||\n        !!document.documentMode === true\n      ) {\n        return 'IE' //crap\n      } else {\n        return 'Unknown'\n      }\n    }\n\n    const DetectReader = () => {\n      setComponent('已安裝')\n      setReader('讀取狀態成功')\n    }\n\n    return (\n      <Box pt={5}>\n        <TopHeading text='檢測電腦環境' />\n        <Text as='p'>\n          請依據下方顯示的瀏覽器與作業系統資訊，安裝適合的讀卡機元件。\n        </Text>\n        <Box color='text.secondary' bg='bg.tertiary' p={3} width={650}>\n          <Text as='p'>您的作業系統：{DetectOS()}</Text>\n          <Text as='p'>您的瀏覽器：{DetectBrowser()}</Text>\n        </Box>\n        <Title text='安裝與檢測讀卡機元件' />\n        <Text as='p'>\n          讀卡機元件為協助健保卡資訊讀取，下載元件安裝檔之前，請依照您的作業系統與瀏覽器環境下載讀卡機元件，並先暫停或關閉您的防毒軟體，避免下載受到阻擋或造成安裝失敗。\n        </Text>\n        <Box color='text.secondary' bg='bg.tertiary' p={3} my={3} width={650}>\n          <Text as='p'>Windows</Text>\n          <Text as='p'>Mac</Text>\n          <Text as='p'>Linux (Ubuntu)</Text>\n          <Text as='p'>Linux (Fedora)</Text>\n        </Box>\n        <Box color='text.secondary' bg='bg.tertiary' p={3} my={3} width={650}>\n          <Text as='p'>請將讀卡機插上電腦USB槽，按下檢測鈕並等待環境確認</Text>\n          <Button onClick={() => DetectReader()}>檢測</Button>\n          <Text as='p'>元件安裝狀態：{component}</Text>\n          <Text as='p'>讀卡機讀取狀態：{reader}</Text>\n        </Box>\n        <PreviosButton step={1} />\n        <NextButton step={3} />\n      </Box>\n    )\n  }\n\n  const Step3 = () => {\n    /* const Verify = () => {\n      if (validation === 'phone') {\n        setDefaultPhone(phone.current.value)\n        setDefaultID(id.current.value)\n        ;(id.current.value !== '') & (phone.current.value !== '') &&\n          setValidation('success')\n        id.current.value === '' ? SetIDValidation(false) : SetIDValidation(true)\n        phone.current.value === ''\n          ? setPhoneValidation(false)\n          : setPhoneValidation(true)\n      } else {\n        setDefaultPin(pin.current.value)\n        setDefaultID(id.current.value)\n        ;(id.current.value !== '') & (pin.current.value !== '') &&\n          setValidation('success')\n        id.current.value === '' ? SetIDValidation(false) : SetIDValidation(true)\n        pin.current.value === ''\n          ? setPinValidation(false)\n          : setPinValidation(true)\n      }\n    } */\n\n    const DetectHealthCard = () => {\n      setHealthCard('成功')\n      setUserName('王小明')\n    }\n\n    const Cities = React.useMemo(\n      () => [{ text: '台北市' }, { text: '新北市' }, { text: '台中市' }],\n      []\n    )\n\n    const Towns = React.useMemo(\n      () => [{ text: '中正區' }, { text: '中山區' }, { text: '士林區' }],\n      []\n    )\n\n    const Villages = React.useMemo(\n      () => [{ text: '水源里' }, { text: '富水里' }, { text: '文盛里' }],\n      []\n    )\n\n    return (\n      <Box pt={5}>\n        <Heading fontSize={4} mt={3} mb={2}>\n          驗證健保卡\n        </Heading>\n        <Text as='p'>請將健保卡插入晶片讀卡機後，按下讀取驗證健保卡</Text>\n        <Box color='text.secondary' bg='bg.tertiary' p={3} my={3} width={650}>\n          <Button onClick={() => DetectHealthCard()}>檢測</Button>\n          <Text as='p'>健保卡讀取狀態：{healthCard}</Text>\n          <Text as='p'>姓名：{userName}</Text>\n        </Box>\n        <FormGroup>\n          <FormGroup.Label htmlFor='householdNo'>戶口名薄戶號</FormGroup.Label>\n          <Text as='p'>請參考戶口名簿封面左上角的號碼</Text>\n          <TextInput\n            ref={householdNo}\n            aria-label='戶口名薄戶號'\n            id='householdNo'\n            placeholder='戶口名薄戶號'\n            width={250}\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormGroup.Label htmlFor='householdNo'>戶籍鄉鎮里鄰</FormGroup.Label>\n          <Dropdown\n            placeholder='請選擇縣市'\n            items={Cities}\n            selectedItem={city}\n            setSelectedItem={setCity}\n          />\n          <Dropdown\n            placeholder='請選擇鄉鎮市區'\n            items={Towns}\n            selectedItem={town}\n            setSelectedItem={setTown}\n          />\n          <Dropdown\n            placeholder='請選擇村里'\n            items={Villages}\n            selectedItem={village}\n            setSelectedItem={setVillage}\n          />\n          <TextInput\n            ref={neighborhood}\n            aria-label='鄰'\n            id='neighborhood'\n            placeholder='請輸入鄰'\n            width={100}\n          />\n        </FormGroup>\n        <PreviosButton step={2} />\n        <ButtonPrimary ml={3} onClick={() => NextStep(4)}>\n          驗證\n        </ButtonPrimary>\n      </Box>\n    )\n  }\n\n  const Step4 = () => {\n    const verify = () => {}\n    return (\n      <Box pt={5}>\n        <RequiredField\n          label='設定密碼'\n          id='password'\n          value={password}\n          placeholder=''\n          validation={passwordValidation}\n          description='註冊密碼長度必須6-12碼，並包含英文大寫、英文小寫、數字、特殊符號(~!@#$%^&*)'\n        />\n        <RequiredField\n          label='再次確認密碼'\n          id='repassword'\n          value={repassword}\n          placeholder=''\n          validation={rePasswordValidation}\n        />\n        <RequiredField\n          label='行動電話'\n          id='mobile'\n          value={mobile}\n          placeholder=''\n          validation={mobileValidation}\n          description='行動電話將作為未來行動裝置之認證使用，請務必輸入'\n        />\n        <InputField label='市話' id='phone' value={phone} placeholder='' />\n        <RequiredField\n          label='電子信箱'\n          id='mail'\n          value={mail}\n          placeholder=''\n          validation={mailValidation}\n          description='因與微軟郵件伺服器連線異常，建議不要填寫微軟電子信箱(例如hotmail, livemail...)，以免無法收到本數寄發的信件'\n        />\n        <InputField\n          label='備用電子信箱'\n          id='recoveryMail'\n          value={recoveryMail}\n          placeholder=''\n        />\n        <PreviosButton step={3} />\n        <ButtonPrimary ml={3} onClick={() => verify()}>\n          儲存並前往下一步\n        </ButtonPrimary>\n      </Box>\n    )\n  }\n\n  const Step6 = () => {\n    return (\n      <Box pt={5} width={650}>\n        <Text as='p'>\n          我同意且閱讀隱私政策。我已明確了解衛生福利部國民健康署健康存摺之規範事項及個人資料保護法權益內容，並且同意遵守所有規定及提供所需之個人資料。我已明確了解衛生福利部國民健康署署長信箱之規範事項及個人資料保護法權益內容，並且同意遵守所有規定及提供所需之個人資料。\n        </Text>\n        <ButtonPrimary mt={3} onClick={() => NextStep(7)}>\n          下一步\n        </ButtonPrimary>\n      </Box>\n    )\n  }\n\n  const Step7 = () => {\n    return (\n      <Box pt={5} width={650}>\n        <Flash variant='success'>\n          <Heading textAlign='center' fontSize={5} mb={2}>\n            帳戶申請成功\n          </Heading>\n          <Text as='p' textAlign='center'>\n            申請成功信件已寄出，請至您的電子信箱收信確認。\n          </Text>\n          <Box display='flex' justifyContent='center' flexWrap='nowrap'>\n            <ButtonPrimary mt={3}>確認並回到健保署首頁</ButtonPrimary>\n          </Box>\n          <Box display='flex' justifyContent='center' flexWrap='nowrap'>\n            <Link href='#' mt={3}>\n              沒有收到信？再次傳送申請成功資訊至信箱\n            </Link>\n          </Box>\n        </Flash>\n      </Box>\n    )\n  }\n\n  return (\n    <ThemeProvider theme={customTheme}>\n      <BaseStyles>\n        <Box m={5}>\n          <Box\n            borderColor='border.primary'\n            borderBottomWidth={1}\n            borderBottomStyle='solid'\n            pb={3}\n          >\n            <Heading fontSize={6} mb={2}>\n              全民健康保險健康存摺帳戶申請\n            </Heading>\n          </Box>\n          <Box display='grid' gridTemplateColumns='1fr 4fr' gridGap={5}>\n            <Box pt={5}>\n              <SideNav bordered aria-label='Main'>\n                <SideNav.Link>\n                  <Text>申請流程</Text>\n                </SideNav.Link>\n                <NavLink step={1} text='確認注意事項' />\n                <NavLink step={2} text='檢測電腦環境與讀卡機' />\n                <NavLink step={3} text='讀取及驗證健保卡' />\n                <NavLink step={4} text='填寫資料' />\n                <NavLink step={5} text='確認/編輯資料' />\n                <NavLink step={6} text='送出申請' />\n              </SideNav>\n            </Box>\n            {steps === 1 ? <Step1 /> : null}\n            {steps === 2 ? <Step2 /> : null}\n            {steps === 3 ? <Step3 /> : null}\n            {steps === 4 ? <Step4 /> : null}\n            {steps === 6 ? <Step6 /> : null}\n            {steps === 7 ? <Step7 /> : null}\n          </Box>\n        </Box>\n      </BaseStyles>\n    </ThemeProvider>\n  )\n}\n\nexport default HealthCard\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport HealthCard from './healthcard'\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path='/healthcard'>\n        <HealthCard />\n      </Route>\n      <Route path='/'>\n        <HealthCard />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}